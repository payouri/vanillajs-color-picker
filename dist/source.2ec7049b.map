{"version":3,"sources":["source.js"],"names":["document","addEventListener","_","colorPicker","querySelector","inputs","querySelectorAll","areas","saveBtn","info","states","errUp","lastError","lastColor","value","selectedArea","exp","forEach","area","bgColor","window","getComputedStyle","getPropertyValue","console","log","rgbToHex","setAttribute","delay","displayMessage","str","clearTimeout","setTimeout","classList","toggle","innerText","hslToHex","hslColor","replace","split","filter","h","r","g","b","s","l","hue2rgb","p","q","t","toHex","x","hex","Math","round","toString","length","rgbColor","hexStr","err","Number","input","index","e","getAttribute","exec","color","substr","style","outline","hexColor","validTextInput","hex3ToHex6","target","add","unselect","path","includes","msg","backgroundColor"],"mappings":"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","file":"source.2ec7049b.map","sourceRoot":"..\\src","sourcesContent":["import './style.scss';\r\ndocument.addEventListener('DOMContentLoaded', _ => {\r\n  const colorPicker = document.querySelector('.color--picker'),\r\n    inputs = colorPicker.querySelectorAll('.color--picker--input'),\r\n    areas = colorPicker.querySelectorAll('.color--picker--visualizer--area'),\r\n    saveBtn = colorPicker.querySelector('.color--picker--save--button'),\r\n    info = colorPicker.querySelector('.color--picker--user--info'),\r\n    states = {\r\n      errUp: false,\r\n      lastError: '',\r\n      lastColor: inputs[0].value,\r\n      selectedArea: false\r\n    },\r\n    exp = /^(#?([a-f\\d]{3}|[a-f\\d]{6})|rgb\\((0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\s?,\\s?(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\s?,\\s?(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\)|rgba\\((0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\s?,\\s?(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\s?,\\s?(0|255|25[0-4]|2[0-4]\\d|1\\d\\d|0?\\d?\\d)\\s?,\\s?(0?\\.\\d|1(\\.0)?)\\)|hsl\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d)\\s?,\\s?(0|100|\\d{1,2})%\\s?,\\s?(0|100|\\d{1,2})%\\)|hsla\\((0|360|35\\d|3[0-4]\\d|[12]\\d\\d|0?\\d?\\d)\\s?,\\s?(0|100|\\d{1,2})%\\s?,\\s?(0|100|\\d{1,2})%\\s?,\\s?(0?\\.\\d|1(\\.0)?)\\))$/;\r\n\r\n\r\n  inputs[1].value = inputs[0].value;\r\n  areas.forEach(area => {\r\n    // area.style.backgroundColor = '#333333';\r\n    let bgColor = window.getComputedStyle(area, null).getPropertyValue('background-color');\r\n    console.log(bgColor);\r\n    bgColor = rgbToHex(bgColor);\r\n\r\n    area.setAttribute('data-color', bgColor);\r\n  });\r\n  let delay = '';\r\n\r\n  function chooseTimeout(fun, nbr) {\r\n    return setTimeout(fun, nbr);\r\n  }\r\n\r\n  function displayMessage(str) {\r\n    if (str !== '') {\r\n      if (delay && states.errUp === true) {\r\n        clearTimeout(delay);\r\n      }\r\n\r\n      function toggleMessage() {\r\n        info.classList.toggle('shown', false);\r\n        states.errUp = false;\r\n      }\r\n\r\n      delay = chooseTimeout(toggleMessage, 3000);\r\n\r\n      info.innerText = str;\r\n      info.classList.toggle('shown', true);\r\n      states.errUp = true;\r\n    }\r\n  }\r\n  console.log(hslToHex('hsl(200, 10%, 20%)'))\r\n\r\n  function hslToHex(hslColor) {\r\n\r\n    hslColor = hslColor.replace(/\\D/g, ' ');\r\n    hslColor = hslColor.split(' ');\r\n    hslColor = hslColor.filter(value => {\r\n      return value !== '';\r\n    });\r\n    console.log(hslColor);\r\n    let h = hslColor[0],\r\n      s = hslColor[1],\r\n      l = hslColor[2],\r\n      r, g, b;\r\n    h /= 360;\r\n    s /= 100;\r\n    l /= 100;\r\n\r\n    if (s === 0) {\r\n      r = g = b = l; // achromatic\r\n    } else {\r\n      const hue2rgb = (p, q, t) => {\r\n        if (t < 0) t += 1;\r\n        if (t > 1) t -= 1;\r\n        if (t < 1 / 6) return p + (q - p) * 6 * t;\r\n        if (t < 1 / 2) return q;\r\n        if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6;\r\n        return p;\r\n      };\r\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\r\n      const p = 2 * l - q;\r\n      r = hue2rgb(p, q, h + 1 / 3);\r\n      g = hue2rgb(p, q, h);\r\n      b = hue2rgb(p, q, h - 1 / 3);\r\n    }\r\n    const toHex = x => {\r\n      const hex = Math.round(x * 255).toString(16);\r\n      return hex.length === 1 ? '0' + hex : hex;\r\n    };\r\n    return `#${toHex(r)}${toHex(g)}${toHex(b)}`;\r\n  }\r\n\r\n  function rgbToHex(rgbColor) {\r\n    rgbColor = rgbColor.replace(/\\D/g, ' ');\r\n    rgbColor = rgbColor.split(' ');\r\n    rgbColor = rgbColor.filter(value => {\r\n      return value !== '';\r\n    });\r\n    let r = rgbColor[0],\r\n      g = rgbColor[1],\r\n      b = rgbColor[2];\r\n    let hexStr = '#',\r\n      err = '';\r\n    if (r > 0 && r <= 255) {\r\n      r = Number(r);\r\n      if (r < 16) hexStr += \"0\";\r\n      hexStr += r.toString(16);\r\n      if (g > 0 && g <= 255) {\r\n        g = Number(g);\r\n        if (g < 16) hexStr += \"0\";\r\n        hexStr += g.toString(16);\r\n        if (b > 0 && b <= 255) {\r\n          b = Number(b);\r\n          if (b < 16) hexStr += \"0\";\r\n          hexStr += b.toString(16);\r\n        } else {\r\n          err = 'blue value is invalid';\r\n        }\r\n      } else {\r\n        err = 'green value is invalid';\r\n      }\r\n    } else {\r\n      err = 'red value is invalid';\r\n    }\r\n    if (err) displayMessage(err);\r\n    return hexStr;\r\n  }\r\n\r\n  function setUpListeners() {\r\n\r\n    inputs[1].addEventListener('change', e => {\r\n      let msg = '';\r\n      if (!states.validTextInput) {\r\n        msg = \"Please enter a valid hex, rgb, hsl color.\"\r\n      } else {\r\n        // if(states.selectedArea) {\r\n        //   states.selectedArea.style.backgroundColor = inputs[0].value;\r\n        //   states.selectedArea.setAttribute('data-color', inputs[0].value);\r\n        //   msg = 'Color saved :)';\r\n        // }else {\r\n        //   msg = 'Please select an area';\r\n        // }\r\n        // states.lastColor = inputs[1].value = inputs[0].value;\r\n      }\r\n      displayMessage(msg);\r\n    })\r\n    inputs[1].addEventListener('blur', e => {\r\n\r\n      e.target.style.outline = '';\r\n    }, false)\r\n  }\r\n\r\n  function hex3ToHex6(hexStr) {\r\n    hexStr = '#' + hexStr.substr(1, 1) + hexStr.substr(1, 1) + hexStr.substr(2, 1) + hexStr.substr(2, 1) + hexStr.substr(3, 1) + hexStr.substr(3, 1);\r\n\r\n    return hexStr;\r\n  }\r\n  // console.log(rgbToHex(255, 20, 30));\r\n  inputs.forEach((input, index, inputs) => {\r\n    input.addEventListener('input', e => {\r\n\r\n      if (input.getAttribute('type') === 'text') {\r\n\r\n        if (input.value !== '' && exp.exec(input.value) !== null) {\r\n          // console.log(input.value);\r\n          let color = input.value,\r\n            msg;\r\n          if (color.substr(0, 1) === '#') {\r\n            if (color.length === 4) {\r\n              color = hex3ToHex6(color);\r\n            }\r\n            inputs[0].value = color;\r\n            inputs[1].style.outline = '1px solid green';\r\n          }\r\n          // rgba(1,1,1,1)\r\n          if (color.substr(0, 3) === 'rgb' && color.substr(3, 1) !== 'a') {\r\n\r\n            let hexColor = rgbToHex(color);\r\n\r\n            inputs[0].value = hexColor;\r\n            inputs[1].style.outline = '1px solid green';\r\n\r\n          } else if (color.substr(0, 3) === 'hsl' && color.substr(3, 1) !== 'a') {\r\n\r\n\r\n            let hexColor = hslToHex(color);\r\n\r\n            inputs[0].value = hexColor;\r\n            inputs[1].style.outline = '1px solid green';\r\n\r\n          } else if (color.substr(0, 4) === 'rgba') {\r\n\r\n            let hexColor = rgbToHex(color);\r\n\r\n            console.log(hexColor);\r\n            inputs[0].value = hexColor;\r\n            inputs[1].style.outline = '1px solid green';\r\n\r\n          } else if (color.substr(0, 4) === 'hsla') {\r\n            console.log(color);\r\n            color = color.replace(/\\s+/g, '');\r\n            inputs[1].style.outline = '1px solid green';\r\n          }\r\n          states.validTextInput = true;\r\n        } else {\r\n          states.validTextInput = false;\r\n          inputs[1].style.outline = '1px solid red';\r\n        }\r\n      }\r\n      if (input.getAttribute('type') === 'color') {\r\n        inputs[1].value = inputs[0].value;\r\n      }\r\n\r\n    }, false)\r\n  });\r\n\r\n  function unselect(e) {\r\n    if (states.selectedArea && !e.path.includes(states.selectedArea) && !e.path.includes(inputs[0]) && !e.path.includes(inputs[1]) && !e.path.includes(saveBtn)) {\r\n      console.log(e.path);\r\n      states.selectedArea.classList.toggle('selected', false);\r\n      states.selectedArea = false;\r\n    } else {\r\n      console.log(e.path);\r\n    }\r\n  }\r\n  areas.forEach((area, index, areas) => {\r\n    area.addEventListener('click', e => {\r\n      states.selectedArea = e.target;\r\n      areas.forEach(area => {\r\n        area.classList.toggle('selected', false);\r\n      })\r\n      area.classList.add('selected');\r\n    }, false)\r\n  })\r\n  window.addEventListener('click', unselect, false);\r\n  saveBtn.addEventListener('click', e => {\r\n    let msg = '';\r\n    if (states.selectedArea) {\r\n      states.selectedArea.style.backgroundColor = inputs[0].value;\r\n      states.selectedArea.setAttribute('data-color', inputs[0].value);\r\n      msg = 'Color saved :)';\r\n    } else {\r\n      msg = 'Please select an area';\r\n    }\r\n    states.lastColor = inputs[1].value = inputs[0].value;\r\n    displayMessage(msg);\r\n    console.log(states);\r\n  });\r\n  setUpListeners();\r\n  // console.log(inputs);\r\n})"]}